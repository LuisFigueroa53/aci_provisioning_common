---

- name: Fail on missing aci_vlan_name
  fail: msg="aci_vlan_name not defined"
  when: (aci_vlan_name == "") or (aci_vlan_name is not defined)

- name: Fail on bad aci_vlan_name name format
  fail: msg="Bad format for aci_vlan_name - should be <TN>|<AP>|<VRF>_<WORKLOAD> -- name provided was {{ aci_vlan_name }}"
  when: aci_vlan_name is not match "(T5)?(CL|DV|Test|Prod)\|[A-Z]+\|([CDTU][FB]|CL)_[A-Z0-9\-]+"

- name: Set TN, AP, EPG vars
  set_fact:
    aci_tn_name: "{{ aci_vlan_name.split('|')[0] | trim }}"
    aci_ap_name: "{{ aci_vlan_name.split('|')[1] | trim }}"
    aci_epg_name: "{{ aci_vlan_name.split('|')[2] | trim }}"

- name: Set Complex, Work vars
  set_fact:
    aci_complex_name: "{{ aci_epg_name.split('_')[0] | trim }}"
    aci_work_name: "{{ aci_epg_name.split('_')[1] | trim }}"

- name: Set APIC Controller
  set_fact:
    aci_hostname: "{% if aci_tn_name is match '^T5' %}TP-APIC-AP1-1{% elif aci_tn_name is match '(Prod|Test|DV)' %}TP-APIC-HD3-1{% else %}CL-APIC-HD1-1{% endif %}.tvlport.net"

- name: Update tenant for T5
  set_fact: 
    aci_tn_name: "{{ aci_tn_name[2:] }}"
  when: aci_tn_name is match "^T5"  

- name: Set Default BD name if not provided (1)
  set_fact:
    aci_bd_name: "{{ aci_complex_name }}-{{ aci_ap_name }}_SQL"
  when: >
    (
      (aci_ap_name == "ENT") and
      ( (aci_bd_name == "") or (aci_bd_name is not defined) ) and
      ( ("SQL" in aci_work_name) or ("DB" in aci_work_name) )
    )

- name: Set Default BD name if not provided (2)
  set_fact:
    aci_bd_name: "{{ aci_complex_name }}-{{ aci_ap_name }}_{{ aci_work_name }}"
  when: >
    (
      ("ENGW" in aci_work_name) or 
      ("IMPS" in aci_work_name) or 
      ("DATAHUB" in aci_work_name) or 
      ("MESB" in aci_work_name) or 
      ("WESB" in aci_work_name) or 
      ("TAAS" in aci_work_name) or 
      ("EPRC" in aci_work_name) or 
      ("ECRT" in aci_work_name) or 
      ("EBURST" in aci_work_name) or 
      ("NGGF" in aci_work_name) or 
      ("SPLASH" in aci_work_name) or 
      ("NAS" in aci_work_name)
    ) and (
      (aci_bd_name == "") or 
      (aci_bd_name is not defined)
    )

- name: Set Default BD if not provided (3)
  set_fact: 
    aci_bd_name: "{{ aci_complex_name }}-{{ aci_ap_name }}"
  when: (aci_bd_name == "") or (aci_bd_name is not defined)

- name: Fail on bad BD name (1)
  fail: msg="Bad BD name - should be <COMPLEX>-<AP>_SQL when Workload is DB or SQL -- name provided was {{ aci_bd_name }}"
  when: >
    (
      (aci_ap_name == "ENT") and
      (
        ("SQL" in aci_work_name) or 
        ("DB" in aci_work_name)
      ) and 
      (aci_bd_name is not match "^aci_complex_name-aci_ap_name_SQL$")
    )

- name: Fail on bad BD name (2)
  fail: msg="Bad BD name.  Should be {{ aci_complex_name }}-{{ aci_ap_name }}_{{ aci_work_name }} -- name provided was {{ aci_bd_name }}."
  when: > 
    (
      ("ENGW" in aci_work_name) or 
      ("IMPS" in aci_work_name) or 
      ("DATAHUB" in aci_work_name) or 
      ("MESB" in aci_work_name) or 
      ("WESB" in aci_work_name) or 
      ("TAAS" in aci_work_name) or 
      ("EPRC" in aci_work_name) or 
      ("ECRT" in aci_work_name) or 
      ("EBURST" in aci_work_name) or 
      ("NGGF" in aci_work_name) or 
      ("SPLASH" in aci_work_name) or 
      ("NAS" in aci_work_name)
    ) and ( 
      aci_bd_name is not match "^{{ aci_complex_name }}-{{ aci_ap_name }}_{{ aci_work_name }}$"
    )

- name: Set Default PCI flag if not defined
  set_fact:
    aci_pci_epg: 0
  when: (aci_pci_epg == "") or (aci_pci_epg is not defined)

- name: Fail on bad PCI flag
  fail: msg="Bad aci_pci_epg - should be 0 or 1 -- value provided was {{ aci_pci_epg }}"
  when: (aci_pci_epg != 0) and (aci_pci_epg != 1)

- name: Validate Tenant exists -- {{ aci_tn_name }}
  aci_tenant:
    validate_certs: false
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    tenant: "{{ aci_tn_name }}"
    state: query
  delegate_to: localhost
  register: out

- name: Fail on Non-Existant Tenant
  fail: msg="Tenant does not exist - {{ aci_hostname }} / {{ aci_tn_name }} "
  when: (out['current'][0] == "") or (out['current'][0] is not defined)

- name: Validate Bridge Domain exists -- {{ aci_bd_name }}
  aci_bd:
    validate_certs: false
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    tenant: "{{ aci_tn_name }}"
    bd: "{{ aci_bd_name }}"
    state: query
  delegate_to: localhost
  register: out

- name: Fail on Non-Existant BD
  fail: msg="Bridge Domain does not exist - {{ aci_hostname }} / {{ aci_bd_name }} "
  when: out['current'][0] is not defined

- name: Validate AP exists -- {{ aci_ap_name }}
  aci_ap:
    validate_certs: false
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    tenant: "{{ aci_tn_name }}"
    ap: "{{ aci_ap_name }}"
    state: query
  delegate_to: localhost
  register: out

- name: Fail on Non-Existant AP
  fail: msg="AP does not exist - {{ aci_hostname }} / {{ aci_ap_name }} "
  when: out['current'][0] is not defined

- name: VeriValidate vCenter Domain exists if requested -- {{ vmware_datacenter }}
  aci_rest:
    validate_certs: false
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    method: get
    path: /api/class/compDom.xml?query-target-filter=eq(compDom.name,"{{ vmware_datacenter }}")
  delegate_to: localhost
  register: out
  when: (vmware_datacenter != "") and (vmware_datacenter is defined)

- name: Fail on Non-Existant vCenter Domain if requested
  fail: msg="vCenter Domain does not exist - {{ aci_hostname }} / {{ vmware_datacenter }} "
  when: (vmware_datacenter != "") and (vmware_datacenter is defined) and (out['imdata'][0] is not defined)

- name: Run EPG job
  include_tasks:
    configure_aci_onprem.yml

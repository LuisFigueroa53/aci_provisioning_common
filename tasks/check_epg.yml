## aci_provisioning_common::tasks::check_epg.yml

- name: Validate Tenant exists -- {{ aci_tn_name }}
  aci_tenant:
    validate_certs: false
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    tenant: "{{ aci_tn_name }}"
    state: query
  delegate_to: localhost
  register: checkTn

- name: Fail on Non-Existant Tenant
  fail: msg="Tenant does not exist - {{ aci_hostname }} / {{ aci_tn_name }} "
  when: checkTn['current'][0] is not defined

- name: Validate AP exists -- {{ aci_ap_name }}
  aci_ap:
    validate_certs: false
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    tenant: "{{ aci_tn_name }}"
    ap: "{{ aci_ap_name }}"
    state: query
  delegate_to: localhost
  register: checkAp

- name: Fail on Non-Existant AP
  fail: msg="AP does not exist - {{ aci_hostname }} / {{ aci_ap_name }} "
  when: checkAp['current'][0] is not defined

- name: Validate EPG exists -- {{ aci_hostname }} / {{ aci_tn_name}}|{{ aci_ap_name }}|{{ aci_epg_name }}
  aci_epg:
    validate_certs: false
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    tenant: "{{ aci_tn_name }}"
    ap: "{{ aci_ap_name }}"
    epg: "{{ aci_ap_name }}"
    state: query
  delegate_to: localhost
  register: checkEpg

- name: Test Fail
  fail:
    msg: "{{ checkEpg }}"

- name: Do we need to create EPG
  set_fact:
    createEPG: true
  when: checkEpg['current'][0] is not defined


- name: Validate VMWare domain if requested -- {{ vmware_datacenter }}
  aci_epg_to_domain:
    validate_certs: false
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    tenant: "{{ aci_tn_name }}"
    ap: "{{ aci_ap_name }}"
    epg: "{{ aci_epg_name }}"
    domain_type: vmm
    vm_provider: vmware
    domain: "{{ vmware_datacenter }}"
    state: query
  delegate_to: localhost
  register: checkVmm
  when: (vmware_datacenter is defined) and (not createEPG)

- name: Is VM domain attached to this EPG
  set_fact:
    addVMM: true
  when: >
    (vmware_datacenter is defined) and
    (
      (checkVmm['current'][0] == "") or
      (checkVmm['current'][0] is not defined) or
      createEPG
    )

- name: Debug check_epg
  debug:
    msg: "EPG = {{ createEPG | default('False') }} and VMM = {{ addVMM | default('False') }}"

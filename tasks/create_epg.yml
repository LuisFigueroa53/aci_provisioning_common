## aci_provisioning_common::tasks::create_epg.yml

- name: Set Default PCI flag if not defined
  set_fact:
    aci_pci_epg: 0
  when: (aci_pci_epg == "") or (aci_pci_epg is not defined)

- name: Fail on bad PCI flag
  fail: msg="Bad aci_pci_epg - should be 0 or 1 -- value provided was {{ aci_pci_epg }}"
  when: (aci_pci_epg != 0) and (aci_pci_epg != 1)

- name: Set Default BD name if not provided (SQL)
  set_fact:
    aci_bd_name: "{{ aci_complex_name }}-{{ aci_ap_name }}_SQL"
  when: >
    (aci_ap_name == "ENT") and 
    (aci_work_name is regex "(SQL|DB)$") and
    ( (aci_bd_name == "") or (aci_bd_name is not defined) )

- name: Set Default BD name if not provided (Special FE)
  set_fact:
    aci_bd_name: "{{ aci_complex_name }}-{{ aci_ap_name }}_{{ aci_work_name }}"
  when: >
    ( aci_work_name is search("IMPS") ) and
    ( aci_complex_name is match "[CDTU]F" ) and
    ( (aci_bd_name == "") or (aci_bd_name is not defined) )

- name: Set Default BD name if not provided (Special BE)
  set_fact:
    aci_bd_name: "{{ aci_complex_name }}-{{ aci_ap_name }}_{{ aci_work_name }}"
  when: >
    (
      aci_work_name is search("DATAHUB") or 
      aci_work_name is search("MESB") or 
      aci_work_name is search("WESB") or 
      aci_work_name is search("TAAS") or 
      aci_work_name is search("EPRC") or 
      aci_work_name is search("ECRT") or 
      aci_work_name is search("EBURST") or 
      aci_work_name is search("NGGF") or 
      aci_work_name is search("SPLASH")
    ) and
    ( aci_complex_name is match "[CDTU]B" ) and
    ( (aci_bd_name == "") or (aci_bd_name is not defined) )

- name: Set Default BD name if not provided (Special BE or FE)
  set_fact:
    aci_bd_name: "{{ aci_complex_name }}-{{ aci_ap_name }}_{{ aci_work_name }}"
  when: >
    ( 
      aci_work_name is search("ENGW") or 
      aci_work_name is search("NAS")
    ) and
    ( (aci_bd_name == "") or (aci_bd_name is not defined) )

- name: Set Default BD if not provided (Common)
  set_fact: 
    aci_bd_name: "{{ aci_complex_name }}-{{ aci_ap_name }}"
  when: (aci_bd_name == "") or (aci_bd_name is not defined)

- name: Fail on bad BD name (SQL)
  fail: msg="Bad BD name - should be COMPLEX-AP_SQL when Workload is DB or SQL -- name provided was {{ aci_bd_name }}"
  when: >
    (aci_ap_name == "ENT") and
    (aci_work_name is regex "(SQL|DB)$") and
    (aci_bd_name is not regex "^aci_complex_name-aci_ap_name_SQL$")

- name: Fail on bad BD name (FE)
  fail: msg="Bad BD name.  Should be {{ aci_complex_name }}-{{ aci_ap_name }}_{{ aci_work_name }} -- name provided was {{ aci_bd_name }}."
  when: > 
    ( aci_work_name is search("IMPS") ) and
    ( aci_complex_name is match "[CDTU]F" ) and
    ( aci_bd_name is not regex "^aci_complex_name-aci_ap_name_aci_work_name$")

- name: Fail on bad BD name (BE)
  fail: msg="Bad BD name.  Should be {{ aci_complex_name }}-{{ aci_ap_name }}_{{ aci_work_name }} -- name provided was {{ aci_bd_name }}."
  when: > 
    (
      aci_work_name is search("DATAHUB") or 
      aci_work_name is search("MESB") or 
      aci_work_name is search("WESB") or 
      aci_work_name is search("TAAS") or 
      aci_work_name is search("EPRC") or 
      aci_work_name is search("ECRT") or 
      aci_work_name is search("EBURST") or 
      aci_work_name is search("NGGF") or 
      aci_work_name is search("SPLASH")
    ) and
    ( aci_complex_name is match "[CDTU]B" ) and
    ( aci_bd_name is not regex "^aci_complex_name-aci_ap_name\\_aci_work_name$")

- name: Fail on bad BD name (FE or BE)
  fail: msg="Bad BD name.  Should be {{ aci_complex_name }}-{{ aci_ap_name }}_{{ aci_work_name }} -- name provided was {{ aci_bd_name }}."
  when: > 
    ( 
      aci_work_name is search("ENGW") or 
      aci_work_name is search("NAS")
    ) and
    ( aci_bd_name is not regex "^aci_complex_name-aci_ap_name_aci_work_name$")

- name: Validate Bridge Domain exists -- {{ aci_bd_name }}
  aci_bd:
    validate_certs: false
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    tenant: "{{ aci_tn_name }}"
    bd: "{{ aci_bd_name }}"
    state: query
  delegate_to: localhost
  register: checkBd

- name: Fail on Non-Existant BD
  fail: msg="Bridge Domain does not exist - {{ aci_hostname }} / {{ aci_bd_name }} "
  when: checkBd['current'][0] is not defined

- name: Create EPG -- {{ aci_tn_name}}|{{ aci_ap_name }}|{{ aci_epg_name }}
  aci_epg:
    validate_certs: false
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    tenant: "{{ aci_tn_name }}"
    ap: "{{ aci_ap_name }}"
    epg: "{{ aci_epg_name }}"
    bd: "{{ aci_bd_name }}"
  delegate_to: localhost

- name: Add Preferred Group unless PCI EPG
  aci_rest:
    validate_certs: false
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    method: post
    path: /api/mo/uni.xml
    content:
      <fvTenant name="{{ aci_tn_name }}">
        <fvAp name="{{ aci_ap_name }}">
          <fvAEPg name="{{ aci_epg_name }}" prefGrMemb="include" />
        </fvAp>
      </fvTenant>
  delegate_to: localhost
  when: aci_pci_epg == 0


